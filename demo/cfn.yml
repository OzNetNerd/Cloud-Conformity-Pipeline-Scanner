AWSTemplateFormatVersion: 2010-09-09
Description: Cloud Conformity demo environment

Parameters:
  AdminIp:
    Type: String
    Default: 0.0.0.0/0
    Description: "CIDR address for security group"

  AmiId:
    Type: AWS::EC2::Image::Id
    Description: "Linux2 AMI"

  VpcCidr:
    Type: String
    Description: "VPC CIDR"
    Default: "10.0.0.0/16"

  PublicSubnetCidr:
    Type: String
    Description: "Public subnet"
    Default: "10.0.0.0/24"

  Ec2KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: "SSH access to the instances"

  InstanceType:
    Type: String
    Default: "t2.small"

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: "true"
      EnableDnsSupport: "true"
      Tags:
        - Key: "Name"
          Value: "Dev VPC"

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: "true"
      VpcId: !Ref Vpc
      Tags:
        - Key: "Name"
          Value: "Public Subnet"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: "Name"
          Value: "Internet Gateway"

  VpcGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc

  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: "VpcGatewayAttachment"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  WebServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiId
      KeyName: !Ref Ec2KeyName
      SubnetId: !Ref PublicSubnet
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !Ref WebServerSecurityGroup
      Tags:
        - Key: "Name"
          Value: "WebServer"

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "WebSg"
      GroupDescription: "Web Server Security Group"
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        FromPort: "22"
        ToPort: "22"
      VpcId: !Ref Vpc

Outputs:
  WebServerHostname:
    Value: !GetAtt WebServer.PublicDnsName
    Export:
      Name: !Sub "${AWS::StackName}-WebServer"